{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","console","log","useFetchGifs","GifExpertApp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAGaA,EAAc,SAAC,GAAgC,IAA/BC,EAA8B,EAA9BA,cAAcC,EAAgB,EAAhBA,WAAgB,EAGnBC,mBAAS,IAHU,mBAGhDC,EAHgD,KAGpCC,EAHoC,KAgBvD,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BT,EAAc,CAACG,GAAF,mBAAgBF,KAC7BG,EAAc,MAKlB,SAEI,uBACAM,KAAK,OACLC,MAAOR,EACPS,SAjBa,SAACN,GAClBF,EAAcE,EAAEO,OAAOF,a,+BCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QAVtB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAY,IAAD,EACVb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAHuB,mBAC7BC,EAD6B,KACtBC,EADsB,KAmBpC,OAbAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAM,SAAAC,GAECC,QAAQC,IAAIF,GACZH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDfgBO,CAAa5B,GAA7BoB,EAH4B,EAG5BA,QAAQb,EAHoB,EAGpBA,KAGf,OACI,qCACI,6BAAKP,IACJoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,8CAAf,SAEQT,EAAKE,KAAI,SAACC,GACN,OACI,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEfxBkB,EAAe,WAAK,IAAD,EAEQ1C,mBAAS,CAAC,WAFlB,mBAErBD,EAFqB,KAETD,EAFS,KAM5B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,EAAeC,WAAYA,IACvD,uBAIE,oBAAI8B,UAAU,YAAd,SAEM9B,EAAWuB,KAAI,SAACT,GACZ,OAAO,cAAC,EAAD,CAEPA,SAAUA,GADLA,Y,MChB7B8B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2b316d7b.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AddCategory = ({setCategories,categories}) => {\n\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleChange = (e)=>{\n        setInputValue(e.target.value)\n    }\n    const handleSumbit = (e)=>{\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories([inputValue,...categories])\n            setInputValue('')\n        }\n        \n    }\n    return (\n        <form onSubmit={handleSumbit}>\n            \n            <input \n            type=\"text\"\n            value={inputValue}\n            onChange={handleChange}\n            />\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","export const getGifs = async(category)=>{\n    \n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=SsliZFEBrmo5e93ESaZQbqy5vhgBJ3aB`\n    const resp = await fetch(url)\n    const {data} = await resp.json()\n\n    const gifs = data.map(img =>{\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    })\n    \n    \n    return gifs\n    \n\n}","import React from 'react'\n\nexport const GifGridItem = ({title,url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn\" >\n            <img src={url} alt={title}/>\n            <p>{title}</p>   \n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem'\n\nexport const GifGrid = ({category}) => {\n\n\n    const {loading,data} = useFetchGifs(category)\n\n\n    return (\n        <>\n            <h3>{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n            <div className=\"card-item animate__animated animate__fadeIn\"> \n            {\n                    data.map((img)=>{\n                        return (\n                            <GifGridItem \n                            key={img.id}\n                            {...img}\n                            />\n                        )\n                    })\n                } \n            </div>     \n\n        </>\n    )\n}\n","import {useState,useEffect} from 'react'\nimport {getGifs} from '../helpers/getGifs'\n\nexport const useFetchGifs = (category)=>{\n    const [state, setstate] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n        getGifs(category)\n        .then( imgs =>{\n\n                console.log(imgs)\n                setstate({\n                    data: imgs,\n                    loading: false\n                })\n\n        })\n     },[category])\n\n    return state\n}","import React,{useState} from 'react';\nimport {AddCategory} from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = ()=>{\n\n    const [categories, setCategories] = useState(['naruto']);\n\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories} categories={categories}/>\n            <hr/>\n            \n            {/* <button onClick={handleAdd}>agregar</button> */}\n\n              <ol className=\"card-item\">\n              {\n                    categories.map((category)=>{\n                        return <GifGrid \n                        key={category}\n                        category={category}\n                        />\n                    })\n                }\n              </ol>  \n\n        </>\n    )\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from './GifExpertApp'\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}